{"ast":null,"code":"var _jsxFileName = \"/Users/richakochar/Downloads/untitled folder/client/src/components/Home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { AiOutlineClose } from 'react-icons/ai';\n// import { useNavigate } from 'react-router-dom';\n// import Navbar from './Navbar'; // Import the Navbar component\n\n// function Home() {\n//     const [transactions, setTransactions] = useState([]);\n//     const [description, setDescription] = useState(\"\");\n//     const [amount, setAmount] = useState(\"\");\n//     const [userName, setUserName] = useState(\"\");\n\n//     const income = transactions\n//         .filter((transaction) => transaction.amount > 0)\n//         .reduce((total, transaction) => total + transaction.amount, 0);\n\n//     const expense = transactions\n//         .filter((transaction) => transaction.amount < 0)\n//         .reduce((total, transaction) => total + transaction.amount, 0);\n\n//     const balance = income + expense;\n\n//     const navigate = useNavigate();\n\n//     const getTransactions = async () => {\n//         try {\n//             const response = await fetch(`http://localhost:8000/transactions`,{\n//                 method: 'GET',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization':localStorage.getItem( \"token\" )\n//                 },\n//             });\n//             const json = await response.json();\n\n//             if (Array.isArray(json)) {\n//                 setTransactions(json);\n//             } else {\n//                 console.error(\"Received non-array data for transactions:\", json);\n//             }\n//         } catch (error) {\n//             console.error(\"Error fetching transactions:\", error);\n//         }\n//     };\n\n//     const addTransactions = async () => {\n//         try {\n//             const response = await fetch(`http://localhost:8000/transactions`, {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization':localStorage.getItem( \"token\" )\n//                 },\n//                 body: JSON.stringify({ description, amount })\n//             });\n//             const transaction = await response.json();\n//             setTransactions([...transactions, transaction]);\n//         } catch (error) {\n//             console.error(\"Error adding transaction:\", error);\n//         }\n//     };\n\n//     const deleteTransactions = async (id) => {\n//         try {\n//             await fetch(`http://localhost:8000/transactions/${id}`, {\n//                 method: 'DELETE',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization':localStorage.getItem( \"token\" )\n//                 }\n//             });\n//             const updatedTransactions = transactions.filter(transaction => transaction._id !== id);\n//             setTransactions(updatedTransactions);\n//         } catch (error) {\n//             console.error(\"Error deleting transaction:\", error);\n//         }\n//     };\n//     const fetchUserName = async () => {\n//         try {\n//             const response = await fetch(`http://localhost:8000/users/userinfo`, {\n//                 method: 'GET',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization': localStorage.getItem(\"token\")\n//                 }\n//             });\n//             const user = await response.json();\n//             console.log(user.name)\n//             setUserName(user.name);\n//         } catch (error) {\n//             console.error(\"Error fetching user name:\", error);\n//         }\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         await addTransactions();\n//         setDescription(\"\");\n//         setAmount(\"\");\n//     };\n\n//     const handleLogout = () => {\n//         // Perform logout actions here if needed\n//         navigate('/login');\n//     };\n\n//     useEffect(() => {\n//         getTransactions();\n//         fetchUserName();\n//     }, []);\n\n//     return (\n//         <div className=\"d-flex flex-column\" style={{ backgroundColor: \"#ccc\", height: \"100%\", width: \"100%\" }}>\n//           <Navbar title={`${userName}'s Expense Tracker`} />\n//             <div className=\"d-flex justify-content-center flex-grow-1\">\n//                 <div className=\"\">\n//                     <h1 className=\"py-5\">Expense Tracker</h1>\n//                     <div className='pb-3'>\n//                         <h3>Your Balance</h3>\n//                         <h4>{balance}</h4>\n//                     </div>\n//                     <div className=\"container text-center bg-white shadow-sm mb-5 \">\n//                         <div className=\"row\">\n//                             <div className=\"col m-4 \">\n//                                 Income\n//                                 <div className=\"text-success\">{income}</div>\n//                             </div>\n//                             <div className=\"col m-4 \">\n//                                 Expense\n//                                 <div className=\"text-danger\">{expense * -1}</div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                     <h3 className='my-3'>History</h3>\n//                     <div className=\"container text-center\" style={{ width: \"300px\" }}>\n//                         <div className=\"row row-cols-1\">\n//                             {transactions.map((transaction, index) => (\n//                                 <div className=\"col d-flex justify-content-between bg-white shadow-sm p-2 my-2\" key={index}>\n//                                     <div>{transaction.description}</div>\n//                                     <div className='d-flex gap-3   '>\n//                                         <div className={transaction.amount > 0 ? \"text-success\" : \"text-danger\"}>{transaction.amount}</div>\n//                                         <AiOutlineClose className='pe-auto mt-1 opacity-50' onClick={() => deleteTransactions(transaction._id)} />\n//                                     </div>\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     </div>\n//                     <h3 className='my-3'>Add new transaction</h3>\n//                     <form className='mb-5 pb-5'>\n//                         <div className=\"mb-3\">\n//                             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Description</label>\n//                             <input type=\"text\" className=\"form-control\" placeholder='Enter Description..' name='description' value={description} onChange={(e) => setDescription(e.target.value)} />\n//                         </div>\n//                         <div className=\"mb-3\">\n//                             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Amount</label>\n//                             <input type=\"text\" className=\"form-control\" placeholder='Enter amount..' name='amount' value={amount} onChange={(e) => setAmount(e.target.value)} />\n//                         </div>\n//                         <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary my-4 w-100\">Add transaction</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Home;\n\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar'; // Import the Navbar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const income = transactions.filter(transaction => transaction.amount > 0).reduce((total, transaction) => total + transaction.amount, 0);\n  const expense = transactions.filter(transaction => transaction.amount < 0).reduce((total, transaction) => total + transaction.amount, 0);\n  const balance = income + expense;\n  const navigate = useNavigate();\n  const getTransactions = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/transactions`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem(\"token\")\n        }\n      });\n      const json = await response.json();\n      if (Array.isArray(json)) {\n        setTransactions(json);\n      } else {\n        console.error(\"Received non-array data for transactions:\", json);\n      }\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n    }\n  };\n  const addTransactions = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/transactions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          description,\n          amount\n        })\n      });\n      const transaction = await response.json();\n      setTransactions([...transactions, transaction]);\n    } catch (error) {\n      console.error(\"Error adding transaction:\", error);\n    }\n  };\n  const deleteTransactions = async id => {\n    try {\n      await fetch(`http://localhost:8000/transactions/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem(\"token\")\n        }\n      });\n      const updatedTransactions = transactions.filter(transaction => transaction._id !== id);\n      setTransactions(updatedTransactions);\n    } catch (error) {\n      console.error(\"Error deleting transaction:\", error);\n    }\n  };\n  const fetchUserName = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/users/userinfo`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem(\"token\")\n        }\n      });\n      const user = await response.json();\n      console.log(user.name);\n      setUserName(user.name);\n    } catch (error) {\n      console.error(\"Error fetching user name:\", error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await addTransactions();\n    setDescription(\"\");\n    setAmount(\"\");\n  };\n  const handleLogout = () => {\n    // Perform logout actions here if needed\n    navigate('/login');\n  };\n  useEffect(() => {\n    getTransactions();\n    fetchUserName();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    style: {\n      background: 'linear-gradient(to bottom, #0f0c29, #302b63, #24243e)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: `${userName}'s Expense Tracker`,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: 'column',\n        justifyContent: \"center\",\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          width: \"500px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"py-5 text-white\",\n            children: \"Expense Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pb-3\",\n            style: {\n              color: \"white\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: balance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container text-center bg-white shadow-sm mb-5 \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col m-4 \",\n                children: [\"Income\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-success\",\n                  children: income\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col m-4 \",\n                children: [\"Expense\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-danger\",\n                  children: expense * -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"my-3\",\n            style: {\n              color: \"white\"\n            },\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container text-center\",\n            style: {\n              width: \"475px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row row-cols-1\",\n              children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col d-flex justify-content-between bg-white shadow-sm p-2 my-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: transaction.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex gap-3   \",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: transaction.amount > 0 ? \"text-success\" : \"text-danger\",\n                    children: transaction.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(AiOutlineClose, {\n                    className: \"pe-auto mt-1 opacity-50\",\n                    onClick: () => deleteTransactions(transaction._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"my-3\",\n            style: {\n              color: \"white\"\n            },\n            children: \"Add new transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"mb-5 pb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputEmail1\",\n                className: \"form-label\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Enter Description..\",\n                name: \"description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputPassword1\",\n                className: \"form-label\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Enter amount..\",\n                name: \"amount\",\n                value: amount,\n                onChange: e => setAmount(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: handleSubmit,\n              className: \"btn my-4 w-100\",\n              style: {\n                background: 'white',\n                borderRadius: \"30px\"\n              },\n              children: \"Add transaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"2CRL/W2gTMn0kr6dCO/G6SxhM4c=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","AiOutlineClose","useNavigate","Navbar","jsxDEV","_jsxDEV","Home","_s","transactions","setTransactions","description","setDescription","amount","setAmount","userName","setUserName","income","filter","transaction","reduce","total","expense","balance","navigate","getTransactions","response","fetch","method","headers","localStorage","getItem","json","Array","isArray","console","error","addTransactions","body","JSON","stringify","deleteTransactions","id","updatedTransactions","_id","fetchUserName","user","log","name","handleSubmit","e","preventDefault","handleLogout","className","style","background","minHeight","children","title","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","justifyContent","alignItems","width","color","map","index","onClick","htmlFor","type","placeholder","value","onChange","target","borderRadius","_c","$RefreshReg$"],"sources":["/Users/richakochar/Downloads/untitled folder/client/src/components/Home.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { AiOutlineClose } from 'react-icons/ai';\n// import { useNavigate } from 'react-router-dom';\n// import Navbar from './Navbar'; // Import the Navbar component\n\n// function Home() {\n//     const [transactions, setTransactions] = useState([]);\n//     const [description, setDescription] = useState(\"\");\n//     const [amount, setAmount] = useState(\"\");\n//     const [userName, setUserName] = useState(\"\");\n\n\n//     const income = transactions\n//         .filter((transaction) => transaction.amount > 0)\n//         .reduce((total, transaction) => total + transaction.amount, 0);\n\n//     const expense = transactions\n//         .filter((transaction) => transaction.amount < 0)\n//         .reduce((total, transaction) => total + transaction.amount, 0);\n\n//     const balance = income + expense;\n\n//     const navigate = useNavigate();\n\n//     const getTransactions = async () => {\n//         try {\n//             const response = await fetch(`http://localhost:8000/transactions`,{\n//                 method: 'GET',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization':localStorage.getItem( \"token\" )\n//                 },\n//             });\n//             const json = await response.json();\n            \n//             if (Array.isArray(json)) {\n//                 setTransactions(json);\n//             } else {\n//                 console.error(\"Received non-array data for transactions:\", json);\n//             }\n//         } catch (error) {\n//             console.error(\"Error fetching transactions:\", error);\n//         }\n//     };\n    \n//     const addTransactions = async () => {\n//         try {\n//             const response = await fetch(`http://localhost:8000/transactions`, {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization':localStorage.getItem( \"token\" )\n//                 },\n//                 body: JSON.stringify({ description, amount })\n//             });\n//             const transaction = await response.json();\n//             setTransactions([...transactions, transaction]);\n//         } catch (error) {\n//             console.error(\"Error adding transaction:\", error);\n//         }\n//     };\n\n//     const deleteTransactions = async (id) => {\n//         try {\n//             await fetch(`http://localhost:8000/transactions/${id}`, {\n//                 method: 'DELETE',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization':localStorage.getItem( \"token\" )\n//                 }\n//             });\n//             const updatedTransactions = transactions.filter(transaction => transaction._id !== id);\n//             setTransactions(updatedTransactions);\n//         } catch (error) {\n//             console.error(\"Error deleting transaction:\", error);\n//         }\n//     };\n//     const fetchUserName = async () => {\n//         try {\n//             const response = await fetch(`http://localhost:8000/users/userinfo`, {\n//                 method: 'GET',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization': localStorage.getItem(\"token\")\n//                 }\n//             });\n//             const user = await response.json();\n//             console.log(user.name)\n//             setUserName(user.name);\n//         } catch (error) {\n//             console.error(\"Error fetching user name:\", error);\n//         }\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         await addTransactions();\n//         setDescription(\"\");\n//         setAmount(\"\");\n//     };\n\n//     const handleLogout = () => {\n//         // Perform logout actions here if needed\n//         navigate('/login');\n//     };\n\n//     useEffect(() => {\n//         getTransactions();\n//         fetchUserName();\n//     }, []);\n\n//     return (\n//         <div className=\"d-flex flex-column\" style={{ backgroundColor: \"#ccc\", height: \"100%\", width: \"100%\" }}>\n//           <Navbar title={`${userName}'s Expense Tracker`} />\n//             <div className=\"d-flex justify-content-center flex-grow-1\">\n//                 <div className=\"\">\n//                     <h1 className=\"py-5\">Expense Tracker</h1>\n//                     <div className='pb-3'>\n//                         <h3>Your Balance</h3>\n//                         <h4>{balance}</h4>\n//                     </div>\n//                     <div className=\"container text-center bg-white shadow-sm mb-5 \">\n//                         <div className=\"row\">\n//                             <div className=\"col m-4 \">\n//                                 Income\n//                                 <div className=\"text-success\">{income}</div>\n//                             </div>\n//                             <div className=\"col m-4 \">\n//                                 Expense\n//                                 <div className=\"text-danger\">{expense * -1}</div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                     <h3 className='my-3'>History</h3>\n//                     <div className=\"container text-center\" style={{ width: \"300px\" }}>\n//                         <div className=\"row row-cols-1\">\n//                             {transactions.map((transaction, index) => (\n//                                 <div className=\"col d-flex justify-content-between bg-white shadow-sm p-2 my-2\" key={index}>\n//                                     <div>{transaction.description}</div>\n//                                     <div className='d-flex gap-3   '>\n//                                         <div className={transaction.amount > 0 ? \"text-success\" : \"text-danger\"}>{transaction.amount}</div>\n//                                         <AiOutlineClose className='pe-auto mt-1 opacity-50' onClick={() => deleteTransactions(transaction._id)} />\n//                                     </div>\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     </div>\n//                     <h3 className='my-3'>Add new transaction</h3>\n//                     <form className='mb-5 pb-5'>\n//                         <div className=\"mb-3\">\n//                             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Description</label>\n//                             <input type=\"text\" className=\"form-control\" placeholder='Enter Description..' name='description' value={description} onChange={(e) => setDescription(e.target.value)} />\n//                         </div>\n//                         <div className=\"mb-3\">\n//                             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Amount</label>\n//                             <input type=\"text\" className=\"form-control\" placeholder='Enter amount..' name='amount' value={amount} onChange={(e) => setAmount(e.target.value)} />\n//                         </div>\n//                         <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary my-4 w-100\">Add transaction</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Home;\n\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar'; // Import the Navbar component\n\nfunction Home() {\n    const [transactions, setTransactions] = useState([]);\n    const [description, setDescription] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n\n    const income = transactions\n        .filter((transaction) => transaction.amount > 0)\n        .reduce((total, transaction) => total + transaction.amount, 0);\n\n    const expense = transactions\n        .filter((transaction) => transaction.amount < 0)\n        .reduce((total, transaction) => total + transaction.amount, 0);\n\n    const balance = income + expense;\n\n    const navigate = useNavigate();\n\n    const getTransactions = async () => {\n        try {\n            const response = await fetch(`http://localhost:8000/transactions`,{\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization':localStorage.getItem( \"token\" )\n                },\n            });\n            const json = await response.json();\n            \n            if (Array.isArray(json)) {\n                setTransactions(json);\n            } else {\n                console.error(\"Received non-array data for transactions:\", json);\n            }\n        } catch (error) {\n            console.error(\"Error fetching transactions:\", error);\n        }\n    };\n    \n    const addTransactions = async () => {\n        try {\n            const response = await fetch(`http://localhost:8000/transactions`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization':localStorage.getItem( \"token\" )\n                },\n                body: JSON.stringify({ description, amount })\n            });\n            const transaction = await response.json();\n            setTransactions([...transactions, transaction]);\n        } catch (error) {\n            console.error(\"Error adding transaction:\", error);\n        }\n    };\n\n    const deleteTransactions = async (id) => {\n        try {\n            await fetch(`http://localhost:8000/transactions/${id}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization':localStorage.getItem( \"token\" )\n                }\n            });\n            const updatedTransactions = transactions.filter(transaction => transaction._id !== id);\n            setTransactions(updatedTransactions);\n        } catch (error) {\n            console.error(\"Error deleting transaction:\", error);\n        }\n    };\n    const fetchUserName = async () => {\n        try {\n            const response = await fetch(`http://localhost:8000/users/userinfo`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': localStorage.getItem(\"token\")\n                }\n            });\n            const user = await response.json();\n            console.log(user.name)\n            setUserName(user.name);\n        } catch (error) {\n            console.error(\"Error fetching user name:\", error);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await addTransactions();\n        setDescription(\"\");\n        setAmount(\"\");\n    };\n\n    const handleLogout = () => {\n        // Perform logout actions here if needed\n        navigate('/login');\n    };\n\n    useEffect(() => {\n        getTransactions();\n        fetchUserName();\n    }, []);\n\n    return (\n        <div className=\"home-container\" style={{ background: 'linear-gradient(to bottom, #0f0c29, #302b63, #24243e)', minHeight: '100vh' }}>\n            <Navbar title={`${userName}'s Expense Tracker`} handleLogout={handleLogout} />\n            <div style={{display:\"flex\", flexDirection:'column', justifyContent:\"center\", alignItems:'center'}}>\n            <div className=\"d-flex justify-content-center\" style={{width:\"500px\"}}>\n                <div className=\"container\">\n                    <h1 className=\"py-5 text-white\">Expense Tracker</h1>\n                    <div className=\"pb-3\" style={{color:\"white\"}}>\n                    <h3>Your Balance</h3>\n                        <h4>{balance}</h4>\n                    </div>\n                    <div className=\"container text-center bg-white shadow-sm mb-5 \">\n                        <div className=\"row\">\n                            <div className=\"col m-4 \">\n                                Income\n                                <div className=\"text-success\">{income}</div>\n                            </div>\n                            <div className=\"col m-4 \">\n                                Expense\n                                <div className=\"text-danger\">{expense * -1}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <h3 className='my-3' style={{color:\"white\"}}>History</h3>\n                    <div className=\"container text-center\" style={{ width: \"475px\" }}>\n                        <div className=\"row row-cols-1\">\n                            {transactions.map((transaction, index) => (\n                                <div className=\"col d-flex justify-content-between bg-white shadow-sm p-2 my-2\" key={index}>\n                                    <div>{transaction.description}</div>\n                                    <div className='d-flex gap-3   '>\n                                        <div className={transaction.amount > 0 ? \"text-success\" : \"text-danger\"}>{transaction.amount}</div>\n                                        <AiOutlineClose className='pe-auto mt-1 opacity-50' onClick={() => deleteTransactions(transaction._id)} />\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <h3 className='my-3' style={{color:\"white\"}}>Add new transaction</h3>\n                    <form className='mb-5 pb-5'>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Description</label>\n                            <input type=\"text\" className=\"form-control\" placeholder='Enter Description..' name='description' value={description} onChange={(e) => setDescription(e.target.value)} />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Amount</label>\n                            <input type=\"text\" className=\"form-control\" placeholder='Enter amount..' name='amount' value={amount} onChange={(e) => setAmount(e.target.value)} />\n                        </div>\n                        <button type=\"submit\" onClick={handleSubmit} className=\"btn my-4 w-100\" style={{background:'white',borderRadius:\"30px\"}}>Add transaction</button>\n                    </form>\n                </div>\n            </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,QAAQ,EAAEC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}